name: Test Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install

      - name: Build and capture output
        run: |
          npm run build 2>&1 | tee build.log
          exit_code=${PIPESTATUS[0]}
          echo "Build exited with status $exit_code"
          if [ $exit_code -ne 0 ]; then
            exit $exit_code
          fi

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
      
      - name: Unit test
        run: |
          npm run test      
      
  linting:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install

      - name: Lint check
        run: |
          npm run lint

  dependency-check:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install

      - name: Dependency check
        run: bash .github/scripts/dependency-check.sh
        
  redeploy:
    needs: [linting, dependency-check]
    runs-on: ubuntu-latest

    steps:
      - name: Generate .pem key
        env:
          MY_KEY: ${{ secrets.MY_KEY }}
        run: |
          echo "$MY_KEY" > my-key.pem && chmod 600 my-key.pem

      - name: Restart server
        env:
          HOST_NAME: ${{ secrets.HOST_NAME }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -f -i my-key.pem \
          ${USER_NAME}@${HOST_NAME} "cd /var/www/test-repo && \
          sudo chmod +x redeploy.sh && \
          nohup ./redeploy.sh > /dev/null 2>&1" && \
          exit $? || exit 1
      
      - name: Upload build files
        env:
          HOST_NAME: ${{ secrets.HOST_NAME }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          sleep 30
          ssh -o StrictHostKeyChecking=no -f -i my-key.pem \ 
          ${USER_NAME}@${HOST_NAME} "cd /var/www/test-repo && node upload_test.js; \ 
          exit_code=\$?; exit \$exit_code"
